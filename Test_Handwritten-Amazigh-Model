{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "06a62455-0640-424c-addb-d7504973fafb",
   "metadata": {},
   "source": [
    "# Test the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3dfa8850-f29c-4c54-a698-0bd39c1611e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2 as cv\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import tensorflow as tf\n",
    "import os\n",
    "from sklearn.preprocessing import LabelEncoder"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b71a350f-1736-44e4-ab57-80284cdebfee",
   "metadata": {},
   "source": [
    "## Load the saved model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "1f9c9180-86ab-450e-9b10-d469f9571230",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load the model\n",
    "model = tf.keras.models.load_model(\"modified_lenet5_model.keras\")\n",
    "# Load the mean from the file\n",
    "mean = np.load('mean.npy')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a5d980f-5eee-446a-a905-91a0f175a64d",
   "metadata": {},
   "source": [
    "## labels "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "10b8a352-3809-472a-a1e5-8057a23a904d",
   "metadata": {},
   "outputs": [],
   "source": [
    "unique_labels = ['ya', 'yab', 'yach', 'yad', 'yadd', 'yae', 'yaf', 'yag', 'yagh',\n",
    "                 'yagw', 'yah', 'yahh', 'yaj', 'yak', 'yakw', 'yal', 'yam', 'yan',\n",
    "                 'yaq', 'yar', 'yarr', 'yas', 'yass', 'yat', 'yatt', 'yaw', 'yax',\n",
    "                 'yay', 'yaz', 'yazz', 'yey', 'yi', 'yu']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "b067443f-fb9f-4f32-9574-2ae8d00d128a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-4 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-4 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-4 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-4 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-4 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LabelEncoder()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LabelEncoder<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.LabelEncoder.html\">?<span>Documentation for LabelEncoder</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LabelEncoder()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LabelEncoder()"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a LabelEncoder object and fit it with the unique labels\n",
    "label_encoder = LabelEncoder()\n",
    "label_encoder.fit(unique_labels)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97f5224a-766c-4dea-8c3f-373c42fddc53",
   "metadata": {},
   "source": [
    "## Reading the image"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "f1c2ec5c-2af6-4b7f-8f85-d99a2df22b6c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "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7LPPLvl8nz59omfPnkccW/1bWYMHD276CzrOY2zM3r17Y+7cubF06dJ47bXXSt4G2rlz52HnH/rcVVVV0b9//3xbaPPmzRHx/9d8DtW9e/cPNM6GTJw4MR544IFYt25dDB8+PNauXRuvv/56TJgwoeS8hx9+OG6//fZYv359/Pe//83j7w3rq6++Gp06dYqBAweWPHbQoEEtNl5anyh0IJ/+9Kdz91FjTj755MNCcfDgwejbt2+sWLGiwcf06dOnxcb4QbXmGGfMmBFLly6NWbNmxec+97morq6OsrKyGD9+fBw8eLDZ16t/zLJly+LUU0897PPl5S33f8va2tro169fLF++PIYPHx7Lly+PU089NUaNGpXnrFu3LsaNGxfDhw+Pe+65J/r37x9dunSJpUuXxi9+8YsWGwvtgygQZ511VqxduzaGDRtW8jbCoQYMGBAR7/6X7plnnpnHt2/f3uDumkOfIyJiw4YNJd+QDtXYW0nHY4yNefDBB2PSpElx11135bG333473nrrrQbP37x5c4wcOTI/3rVrV/zrX/+KMWPG5GuJiOjbt+8RvxYtoXPnznHttdfG/fffH/PmzYuHHnoorr/++ujcuXOe8+tf/zq6du0ajz32WJx88sl5fOnSpSXXGjBgQBw8eDC2bNlSMhv661//ekxfA8eXNQXi6quvjgMHDsSPfvSjwz63f//+/OY3atSo6NKlSyxcuLDkLZT58+e/73MMHTo0Bg4cGPPnzz/sm+l7r1X/Pveh5xyPMTamc+fOJdeKiFi4cGEcOHCgwfPvvffekt1QS5Ysif3798dll10WEe/+13v37t1jzpw5JefV2759+xHH09QtqfUmTJgQO3bsiGnTpsWuXbtKdh3Vv76ysrKS17N169Z46KGHSs6r38J6zz33lBxfuHBhk8ZB+2CmQFx88cUxbdq0mDt3bqxfvz4uvfTS6NKlS2zevDlWrlwZCxYsiK985SvRp0+f+Na3vhVz586Nyy+/PMaMGRPPP/98rFmzJnr37n3E5+jUqVMsWbIkvvSlL8UnP/nJmDJlSvTv3z82bdoUL774Yjz22GMREVFTUxMRETNnzoza2tro3LlzjB8//riMsTGXX355LFu2LKqrq+NjH/tYPP3007F27dqSrb7vtW/fvvjCF74QV199dbz00ktxzz33xIUXXhjjxo2LiHfXDJYsWRITJkyIoUOHxvjx46NPnz7xt7/9LR555JEYNmxYLFq0qNHxLFq0KG699daoq6t738XmiIghQ4bE4MGDY+XKlXHeeefF0KFDSz4/duzYuPvuu+OLX/xiXHvttbFt27ZYvHhxDBo0KF544YU8r6amJq688sqYP39+vPnmm/HZz342nnzyyXj55ZcjomkbBmgHWnHnEy2kfivkM888c8TzJk2aVFRWVjb6+XvvvbeoqakpKioqim7duhWf+MQniu985zvFP//5zzznwIEDxa233lr079+/qKioKEaMGFFs2LChGDBgwBG3pNZ76qmnitGjRxfdunUrKisri/PPP79YuHBhfn7//v3FjBkzij59+hRlZWWHbcdsyTE2Jg7ZXrljx45iypQpRe/evYuqqqqitra22LRp02HXq/97ePLJJ4upU6cWPXv2LKqqqorrrruuePPNNw97nrq6uqK2traorq4uunbtWpx11lnF5MmTi2effTbPOZotqe9Vvy12zpw5DX7+vvvuK84+++zi5JNPLj760Y8WS5cubfC5d+/eXdx4443Fhz70oaKqqqq44ooripdeeqmIiOInP/lJk8dD21VWFIfMi4EOZ8GCBfHNb34ztm7dGmeccUaLXnv9+vUxZMiQWL58ef6EPO2XNQXo4IqiiPvuuy8uvvjiow7C3r17Dzs2f/786NSpUwwfPvyork3bYE0BOqjdu3fHb3/726irq4s///nPsWrVqqO+5h133BHPPfdcjBw5MsrLy2PNmjWxZs2amDp1apx++uktMGpam7ePoIPaunVrDBw4MHr06BHTp0+PH//4x0d9zccffzxuvfXW2LhxY+zatSvOOOOMmDBhQvzgBz9o0Z+voPWIAgDJmgIASRQASE1+E9APpgC0b01ZLTBTACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgDpmNzr1o1XAY6Plr4FkZkCAEkUAEiiAEASBQCSKACQRAGAJAoAJFEAIIkCAEkUAEiiAEASBQCSKACQRAGAJAoAJFEAIIkCAEkUAEiiAEASBQCSKACQRAGAJAoAJFEAIIkCAEkUAEiiAEASBQCSKACQRAGAJAoAJFEAIIkCAEkUAEiiAEASBQCSKACQRAGAJAoAJFEAIIkCAEkUAEiiAEASBQCSKACQRAGAJAoAJFEAIJW39gBo2MhJ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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Define the path to the folder containing images\n",
    "folder_path = 'test_with_images'\n",
    "filename = 'yak.png'\n",
    "# the path of the image\n",
    "image_path = os.path.join(folder_path, filename)\n",
    "# reading the image\n",
    "image = cv.imread(image_path)\n",
    "# Convert the image to RGB (OpenCV loads images in BGR by default)\n",
    "image = cv.cvtColor(image, cv.COLOR_BGR2RGB)\n",
    "## Pad the Image\n",
    "# Since the model expects input images of size (68, 68, 3) \n",
    "# and our input images are (64, 64, 3) we need to pad the image with pad = 2\n",
    "# Ensure the image is of size (64, 64, 3)\n",
    "image = cv.resize(image, (64, 64))\n",
    "# Pad the image to make it (68, 68, 3)\n",
    "image_padded = np.pad(image, ((2, 2), (2, 2), (0, 0)), mode='constant')\n",
    "## Normalize the Image\n",
    "# Normalize the image\n",
    "image_normalized = image_padded / 255.0\n",
    "# because we substract the mean on the training we have to subtract it here\n",
    "image_normalized -= mean\n",
    "# In TensorFlow and Keras, models expect input data in batches.\n",
    "# This means that even if we are predicting just one image, it needs to be in the form of a batch.\n",
    "# This is why we need to add a batch dimension to the image.\n",
    "image_batch = np.expand_dims(image_normalized, axis=0)\n",
    "## Make Predictions\n",
    "# Make a prediction\n",
    "predictions = model.predict(image_batch)\n",
    "\n",
    "# Get the predicted class index\n",
    "predicted_class_index = np.argmax(predictions, axis=1)[0]\n",
    "# Decode the predicted class index to label\n",
    "predicted_label = label_encoder.inverse_transform([predicted_class_index])[0]\n",
    "## Visualize the Image\n",
    "plt.imshow(image_padded)\n",
    "plt.title(f'Predicted label: {predicted_label}')\n",
    "plt.axis('off')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f1b2dc28-6b75-44da-9454-8f54e30a4f4a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
