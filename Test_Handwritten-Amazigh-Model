{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "06a62455-0640-424c-addb-d7504973fafb",
   "metadata": {},
   "source": [
    "# Test the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3dfa8850-f29c-4c54-a698-0bd39c1611e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2 as cv\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import tensorflow as tf\n",
    "import os\n",
    "from sklearn.preprocessing import LabelEncoder"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b71a350f-1736-44e4-ab57-80284cdebfee",
   "metadata": {},
   "source": [
    "## Load the saved model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "1f9c9180-86ab-450e-9b10-d469f9571230",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load the model\n",
    "model = tf.keras.models.load_model(\"modified_lenet5_model.keras\")\n",
    "# Load the mean from the file\n",
    "mean = np.load('mean.npy')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a5d980f-5eee-446a-a905-91a0f175a64d",
   "metadata": {},
   "source": [
    "## labels "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "10b8a352-3809-472a-a1e5-8057a23a904d",
   "metadata": {},
   "outputs": [],
   "source": [
    "unique_labels = ['ya', 'yab', 'yach', 'yad', 'yadd', 'yae', 'yaf', 'yag', 'yagh',\n",
    "                 'yagw', 'yah', 'yahh', 'yaj', 'yak', 'yakw', 'yal', 'yam', 'yan',\n",
    "                 'yaq', 'yar', 'yarr', 'yas', 'yass', 'yat', 'yatt', 'yaw', 'yax',\n",
    "                 'yay', 'yaz', 'yazz', 'yey', 'yi', 'yu']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "b067443f-fb9f-4f32-9574-2ae8d00d128a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-4 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-4 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-4 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-4 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-4 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LabelEncoder()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LabelEncoder<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.LabelEncoder.html\">?<span>Documentation for LabelEncoder</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LabelEncoder()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LabelEncoder()"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a LabelEncoder object and fit it with the unique labels\n",
    "label_encoder = LabelEncoder()\n",
    "label_encoder.fit(unique_labels)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97f5224a-766c-4dea-8c3f-373c42fddc53",
   "metadata": {},
   "source": [
    "## Reading the image"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "f1c2ec5c-2af6-4b7f-8f85-d99a2df22b6c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "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onfv3kccW9NHWYMHDz76J3Scx9iavXv3xoIFC6KhoSH+9a9/lXwMtHPnzmb7H/7Y1dXV0a9fv/xYaNOmTRHx/+d8DtezZ8/3NM6WTJ06NR544IFYt25djBgxItauXRuvvfZaTJkypWS/hx9+OG6//fZYv359vPXWW7n90LC+/PLL0aVLlxg4cGDJfQcNGtRm46XjiUIn8ulPfzpXH7Wme/fuzUJx8ODB6NOnT6xcubLF+9TV1bXZGN+rjhzj7Nmzo6GhIebOnRuf/exno6amJsrKymLixIlx8ODBYz5e031WrFgRp59+erPby8vb7o9lfX199O3bN+6///4YMWJE3H///XH66afH6NGjc59169bFhAkTYsSIEbFs2bLo169fdOvWLRoaGuIXv/hFm42Fk4MoEAMHDoy1a9fG8OHDSz5GOFz//v0j4p2/6Z555pm5fdu2bS2urjn8MSIiNmzYUPKGdLjWPko6HmNszYMPPhjTpk2Lu+66K7e9+eabsWPHjhb337RpU4waNSq/37VrV/znP/+JcePG5XOJiOjTp88RX4u20LVr15g8eXLcd999cccdd8RDDz0U1113XXTt2jX3+fWvfx0VFRXx2GOPRffu3XN7Q0NDybH69+8fBw8ejM2bN5fMDl588cV2fQ4cX84pEFdffXUcOHAgvv/97ze7bf/+/fnmN3r06OjWrVssXry45COUhQsXvutjDB06NAYMGBALFy5s9mZ66LGaPuc+fJ/jMcbWdO3ateRYERGLFy+OAwcOtLj/vffeW7Iaavny5bF///647LLLIuKdv7337Nkz5s+fX7Jfk23bth1xPEe7JLXJlClTYvv27TFz5szYtWtXyaqjpudXVlZW8ny2bNkSDz30UMl+TeO/5557Sra/n9eWE4+ZAnHJJZfEzJkzY8GCBbF+/foYO3ZsdOvWLTZt2hSrVq2KRYsWxZe+9KWoq6uLb3zjG7FgwYK4/PLLY9y4cfHss8/Go48+GqeddtoRH6NLly6xfPnyuOKKK+L888+PGTNmRL9+/WLjxo3x/PPPx2OPPRYREcOGDYuId05m1tfXR9euXWPixInHZYytufzyy2PFihVRU1MTH//4x+Opp56KtWvXliz1PdS+ffvic5/7XFx99dXx4osvxrJly+Kiiy6KCRMmRMQ75wyWL18eU6ZMiaFDh8bEiROjrq4u/vnPf8YjjzwSw4cPjyVLlrQ6niVLlsStt94ajY2N73qyOSLiggsuiMGDB8eqVavi3HPPjaFDh5bcPn78+Lj77rvj85//fEyePDm2bt0aS5cujbPOOiuee+653O/888+PSZMmxbJly2Lnzp1x4YUXxuOPPx7/+Mc/juJV5KTRgSufaCNNSyGffvrpI+43bdq0oqqqqtXb77333mLYsGFFZWVl0aNHj+KTn/xk8a1vfav497//nfscOHCguPXWW4t+/foVlZWVxciRI4sNGzYU/fv3P+KS1CZPPvlkMWbMmKJHjx5FVVVVcd555xWLFy/O2/fv31/Mnj27qKurK8rKypotx2zLMbYmDlteuX379mLGjBnFaaedVlRXVxf19fXFxo0bmx2v6efwhz/8obj++uuL3r17F9XV1cU111xTvPHGG80ep7Gxsaivry9qamqKioqKYuDAgcX06dOLZ555Jvd5P0tSD9W0LHb+/Pkt3v6Tn/ykOPvss4vu3bsXH/vYx4qGhoYWH3vv3r3FnDlzitra2qKqqqq44oorildeecWS1E6krCgOmxcDnc6iRYvipptuii1btsRHPvKRjh4OJzBRgE6uKIoYMmRI1NbWvuu/gQDnFKCT2r17d/z2t7+NxsbG+Otf/xqrV6/u6CFxEjBTgE5qy5YtMWDAgOjVq1fMmjUrfvCDH3T0kDgJiAIAyb9TACCJAgDpqE80nwy/PByA1h3N2QIzBQCSKACQRAGAJAoAJFEAIIkCAEkUAEiiAEASBQCSKACQ2uX3KbjwKsDx0daXIDJTACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKAKTyjh4ARESMmvbTjh5Cixp/9pWOHgIcV2YKACRRACCJAgBJFABIogBAKiuKojiqHcvKjvqgR3lIOrkTdUXR8WYFE+2prd+bzRQASKIAQBIFAJIoAJCcaKZNnGwnld/vyd/j+XydqOZInGgGoN2IAgBJFABIogBAEgUAktVHHDMrb1p2vFdgnUyvDe3H6iMA2o0oAJBEAYAkCgCk8o4eACcGJ4/fv9ae18l2CRA+2MwUAEiiAEASBQCSKACQRAGA5DIXHzDttRKms64oai9+DrQVl7kAoN2IAgBJFABIogBAcpmLTszJzBPXsVwSw+UzOJ7MFABIogBAEgUAkigAkEQBgGT1EZzgjmWV0bGsXoKWmCkAkEQBgCQKACRRACA50dwJuJxF59HSa97az/dY9oWjZaYAQBIFAJIoAJBEAYDkRDN0csdyohrMFABIogBAEgUAkigAkEQBgGT10UnGJS0+eFr72bikBe3BTAGAJAoAJFEAIIkCAEkUAEiiAEASBQCSKACQRAGAJAoAJJe5+IBxOYsPHj9zjoWZAgBJFABIogBAEgUAkhPNnZgTjMCxMlMAIIkCAEkUAEiiAEASBQCS1UcnqFHTftrRQwA+gMwUAEiiAEASBQCSKACQnGjuBFzOAmgrZgoAJFEAIIkCAEkUAEiiAEASBQCSKACQRAGAJAoAJFEAIIkCAEkUAEiiAEASBQCSKACQ/D6Fk4zfnQC0JzMFAJIoAJBEAYAkCgAkUQAgiQIASRQASKIAQBIFAJIoAJBc5uIEMGraTzt6CAARYaYAwCFEAYAkCgAkUQAgiQIASRQASKIAQBIFAJIoAJBEAYAkCgAkUQAgiQIASRQASKIAQBIFAJIoAJBEAYAkCgAkUQAgiQIASRQASKIAQBIFAJIoAJBEAYAkCgCk8o4eAPDeNP7sK822jZr20w4YCZ2JmQIASRQASKIAQBIFAJITzSeZlk4ktnTCEeC9MFMAIIkCAEkUAEiiAEASBQCSKACQRAGAJAoAJFEAIIkCAEkUAEiiAEASBQCSKACQRAGAJAoAJFEAIIkCAEkUAEiiAEASBQCSKACQRAGAJAoAJFEAIIkCAKm8owcAtJ3Gn32lo4fASc5MAYAkCgAkUQAgiQIASRQASGVFURRHtWNZ2VEf9CgPCcD71NbvzWYKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgCQKACRRACCJAgCpvD0OWlZW1h6HBaCdmSkAkEQBgCQKACRRACCJAgBJFABIogBAEgUAkigAkEQBgHTUl7koiqI9xwHACcBMAYAkCgAkUQAgiQIASRQASKIAQBIFAJIoAJBEAYD0f06N5yryYHOGAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Define the path to the folder containing images\n",
    "folder_path = 'test_with_images'\n",
    "filename = 'yad.png'\n",
    "# the path of the image\n",
    "image_path = os.path.join(folder_path, filename)\n",
    "# reading the image\n",
    "image = cv.imread(image_path)\n",
    "# Convert the image to RGB (OpenCV loads images in BGR by default)\n",
    "image = cv.cvtColor(image, cv.COLOR_BGR2RGB)\n",
    "## Pad the Image\n",
    "# Since the model expects input images of size (68, 68, 3) \n",
    "# and our input images are (64, 64, 3) we need to pad the image with pad = 2\n",
    "# Ensure the image is of size (64, 64, 3)\n",
    "image = cv.resize(image, (64, 64))\n",
    "# Pad the image to make it (68, 68, 3)\n",
    "image_padded = np.pad(image, ((2, 2), (2, 2), (0, 0)), mode='constant')\n",
    "## Normalize the Image\n",
    "# Normalize the image\n",
    "image_normalized = image_padded / 255.0\n",
    "# because we substract the mean on the training we have to subtract it here\n",
    "image_normalized -= mean\n",
    "# In TensorFlow and Keras, models expect input data in batches.\n",
    "# This means that even if we are predicting just one image, it needs to be in the form of a batch.\n",
    "# This is why we need to add a batch dimension to the image.\n",
    "image_batch = np.expand_dims(image_normalized, axis=0)\n",
    "## Make Predictions\n",
    "# Make a prediction\n",
    "predictions = model.predict(image_batch)\n",
    "\n",
    "# Get the predicted class index\n",
    "predicted_class_index = np.argmax(predictions, axis=1)[0]\n",
    "# Decode the predicted class index to label\n",
    "predicted_label = label_encoder.inverse_transform([predicted_class_index])[0]\n",
    "## Visualize the Image\n",
    "plt.imshow(image_padded)\n",
    "plt.title(f'Predicted label: {predicted_label}')\n",
    "plt.axis('off')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f1b2dc28-6b75-44da-9454-8f54e30a4f4a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
